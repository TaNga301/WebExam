@model WebExam.Models.TakeExamModel
@{
    ViewBag.Title = "Home";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

<script>
    if (window.history.replaceState) {
        window.history.replaceState(null, null, window.location.href);
    }
</script>
<style>
    /*    .panel-default:not(.panel-unit):not(.download):not(.panel-teacher):not(.panel-rating) {
        border-bottom: 1px dashed #d17407;
    }
    */
    .test-gird #countdown {
        color: red;
        font-weight: bold;
        font-size: 40px;
    }

    .form-group {
        margin-bottom: 25px;
    }

    .cancelLink {
        font-size: 14px;
        padding-left: 10px;
        color: red !important;
    }

    .exam-info {
        color: #428bca;
        font-size: 16px;
    }

    .template2 {
        border: 1px solid #CCC;
        padding: 15px;
        margin-bottom: 10px;
        text-align: center;
    }

        .template2 .exam-info {
            padding: 10px 0;
            text-align: left;
        }

        .template2 h1 {
            color: #00a651;
            margin-top: 0;
        }

        .template2 button {
            padding: 10px;
            font-size: 16px;
            font-weight: bold;
        }
</style>


@using (Html.BeginForm())
{<div class="content-heading row">
        <div class="row detail test-gird">
            <div class="col-xs-24 col-sm-24 col-md-24">
                <div class="row">
                    <div class="col-md-8 sticky-exams">


                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.StudentID)
                        @Html.HiddenFor(m => m.TakeExamTime)

                        <div id="timer-box" class="template2">
                            <span style="color: #428bca; font-weight: bold;">Thời gian còn lại</span>
                            <div id="countdown">
                                <span id="takeExamTime"></span>

                                @Html.HiddenFor(model => model.ExamTime)
                            </div>
                        </div>
                        <div class="template2">
                            <h1>@Model.Subject @Html.HiddenFor(model => model.StudentName): @Model.Title @Html.HiddenFor(model => model.Title)</h1>
                            <ul class="exam-info">
                                @Html.HiddenFor(model => model.ExamID)
                                <li><label>Tên :</label> <br> @Model.StudentName </li>
                                <li><label>Số câu</label>: @Model.NumOfQuestions </li>
                                <li>
                                    <label>Thời gian</label>: @Model.ExamTime phút
                                </li>

                            </ul>
                        </div>
                        <div class="template2">
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">

                                    @if (Model.TakeExamTime == 0)
                                    {
                                        <button type="submit" value="Nộp bài" class="btn btn-success btn-submit"><em class="fa fa-floppy-o">&nbsp;</em>Nộp bài</button>
                                    }
                                    else
                                    {
                                        <button type="submit" value="Nộp bài" class="btn btn-success btn-submit" disabled><em class="fa fa-floppy-o">&nbsp;</em>Nộp bài</button>

                                    }
                                </div>
                            </div>

                            &nbsp; <a href="" class="cancelLink" onclick="history.back();"> Quay lại </a>
                        </div>
                    </div>


                    <div class="col-md-16">
                        <div class="panel panel-default">
                            <div class="panel-body">
                                @if (Model.Subject != "Tiếng anh")
                                {
                                    if (Model.Questions?.Count > 0)
                                    {
                                        string[] answerTitle = { "A", "B", "C", "D" };
                                        for (var i = 0; i < Model.Questions.Count; i++)
                                        {
                                            @Html.HiddenFor(model => model.Questions[i].QuestionID)
                                            @Html.HiddenFor(model => model.Questions[i].Title)
                                            <div style="margin-top: 10px; margin-bottom: 2px">
                                                <span style="font-weight: bold;">
                                                    <span style="color: red;">Câu hỏi @Html.Raw((i + 1 + ". "))</span>


                                                    @if (Model.Questions[i].CorrectAnswer.Count() == 1)
                                                    {
                                                        <span style="color: blue;">(Chọn đáp án đúng nhất)</span>
                                                    }
                                                    else if (Model.Questions[i].CorrectAnswer.Count() > 1)
                                                    {
                                                        var correctAnswerCount = Model.Questions[i].CorrectAnswer.Count() - 1;
                                                        <span style="color: blue;">(Chọn @correctAnswerCount đáp án)</span>
                                                    }
                                                    <br />
                                                    @Html.Raw(" " + Model.Questions[i].Title)
                                                </span>
                                            </div>
                                            if (Model.Questions[i].Answers?.Count > 0)
                                            {
                                                for (var j = 0; j < Model.Questions[i].Answers.Count; j++)
                                                {
                                                    @Html.HiddenFor(model => model.Questions[i].Answers[j].AnswerID);
                                                    @Html.HiddenFor(model => model.Questions[i].Answers[j].AnswerTitle);
                                                    @Html.HiddenFor(model => model.Questions[i].Answers[j].Content);
                                                    <div style="margin-left: 20px" class="row">
                                                        @if (Model.TakeExamTime == 0)
                                                        {
                                                            <span style="margin-top:2px">@Html.EditorFor(model => model.Questions[i].Answers[j].IsSelect)</span>
                                                        }
                                                        else
                                                        {
                                                            <span style="margin-top:2px">@Html.EditorFor(model => model.Questions[i].Answers[j].IsSelect, new { htmlAttributes = new { @disabled = "disabled" } })</span>
                                                        }
                                                        <span style="font-weight:bold;">
                                                            &nbsp;&nbsp;@Html.Raw(answerTitle[j])
                                                        </span>
                                                        <span>@Html.Raw(". " + Model.Questions[i].Answers[j].Content)</span>
                                                    </div>
                                                }
                                            }
                                            else
                                            {
                                                <p>Question Empty!</p>
                                            }<hr />
                                        }

                                    }
                                }
                                else
                                {
                                    if (Model.Questions?.Count > 0)
                                    {
                                        string[] answerTitle = { "A", "B", "C", "D" };
                                        for (var i = 0; i < Model.Questions.Count; i++)
                                        {
                                            @Html.HiddenFor(model => model.Questions[i].QuestionID)
                                            @Html.HiddenFor(model => model.Questions[i].Title)
                                            <div style="margin-top: 10px; margin-bottom: 2px">
                                                <span style="font-weight: bold;">
                                                    <span style=" font-size:20px; color: red;"> @Html.Raw((i + 1 + ". "))</span>


                                                    @if (Model.Questions[i].CorrectAnswer.Count() == 1)
                                                    {
                                                        <span style="color: blue;">(Choose the best answer)</span>
                                                    }
                                                    else if (Model.Questions[i].CorrectAnswer.Count() > 1)
                                                    {
                                                        var correctAnswerCount = Model.Questions[i].CorrectAnswer.Count() - 1;
                                                <span style="color: blue;">(Choose @correctAnswerCount answer)</span>
                                                    }
                                                    <br />
                                                    @Html.Raw(" " + Model.Questions[i].Title)
                                                </span>
                                            </div>
                                            if (Model.Questions[i].Answers?.Count > 0)
                                            {
                                                for (var j = 0; j < Model.Questions[i].Answers.Count; j++)
                                                {
                                                    @Html.HiddenFor(model => model.Questions[i].Answers[j].AnswerID);
                                                    @Html.HiddenFor(model => model.Questions[i].Answers[j].AnswerTitle);
                                                    @Html.HiddenFor(model => model.Questions[i].Answers[j].Content);
                                                    <div style="margin-left: 20px" class="row">
                                                        @if (Model.TakeExamTime == 0)
                                                        {
                                                            <span style="margin-top:2px">@Html.EditorFor(model => model.Questions[i].Answers[j].IsSelect)</span>
                                                        }
                                                        else
                                                        {
                                                            <span style="margin-top:2px">@Html.EditorFor(model => model.Questions[i].Answers[j].IsSelect, new { htmlAttributes = new { @disabled = "disabled" } })</span>
                                                        }
                                                        <span style="font-weight:bold;">
                                                            &nbsp;&nbsp;@Html.Raw(answerTitle[j])
                                                        </span>
                                                        <span>@Html.Raw(". " + Model.Questions[i].Answers[j].Content)</span>
                                                    </div>
                                                }
                                            }
                                            else
                                            {
                                                <p>Question Empty!</p>
                                            }<hr />
                                        }

                                    }
                                }
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

}


<script src="~/Scripts/Lib/jquery-3.3.1.min.js" type="text/javascript"></script>
<script>
    let distance = Number($("#ExamTime").val()) * 60 * 1000;
    let takeExamTime = Number($("#TakeExamTime").val());
    if (takeExamTime !== 0) {
        var submitTimeMs = distance - takeExamTime;
        let hours = Math.floor((submitTimeMs % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        let minutes = Math.floor((submitTimeMs % (1000 * 60 * 60)) / (1000 * 60));
        let seconds = Math.floor((submitTimeMs % (1000 * 60)) / 1000);
        $("#takeExamTime").html(" " + hours + ":" + minutes + ":" + seconds);
    }
    else if ($("#TakeExamTime").length > 0) {
        let x = setInterval(function () {
            distance -= 1000;

            let hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            let minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            let seconds = Math.floor((distance % (1000 * 60)) / 1000);

            let takeTime = hours + ":" + minutes + ":" + seconds;

            $("#takeExamTime").html(takeTime);
            $("#TakeExamTime").val(distance);

            if (distance < 0) {
                clearInterval(x);
                $("#takeExamTime").html("Time up");
                $(".btn-submit").click();
            }
        }, 1000);
    }
</script>

