@model PagedList.IPagedList<WebExam.Models.ExamModel>
@using PagedList
@using PagedList.Mvc
@{
    ViewBag.Title = "Exam";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    var roleID = @HttpContext.Current.Session["RoleID"]?.ToString();
    var i = 1;
    var SubjectID = @HttpContext.Current.Session["SubjectID"]?.ToString();
    var intId = Convert.ToInt32(SubjectID);
}

<div class="content-heading row">
    <div class="row">
        <div class="col-sm-21">
            <h1 class="m-bottom">Danh sách đề thi</h1>
        </div>
        <div class="col-sm-2">
            <a role="button" class="btn btn-primary" href="@Url.Action("Create", "Exam")"><i class="fa fa-plus" aria-hidden="true"></i> Thêm</a>
        </div>
    </div>
    <hr />
    <div class="table-responsive">
        <table class="table table-striped table-bordered table-hover table-middle">
            <tr>
                <th>
                    #
                </th>
                <th>
                    Tiêu đề bài
                </th>
                <th>
                    Thời gian
                </th>
                <th>
                    Số câu
                </th>
                <th>
                    Chủ đề
                </th>
                <th>
                    Ngày tạo
                </th>
                <th>
                    Ngày chỉnh sửa
                </th>
                <th class="col-md-1">
                    Trạng thái
                </th>
                <th class="col-md-3"></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @i
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ExamTime) Phút
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NumOfQuestions) Câu
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SubjectNm)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ModifiedDate)
                    </td>
                    <td>
                        @if (item.Status == false)
                        {
                            <a class="btn btn-xs btn-primary" disabled> <i class="fa fa-solid fa-check"></i> </a>
                        }
                        else
                        {
                            <a class="btn btn-xs btn-danger" disabled> <i class="fa fa-regular fa-ban"></i> </a>
                        }
                    </td>
                    <td>
                        @if (roleID == "2")
                        {
                            <a role="button" href="@Url.Action("Edit", "Exam", new { id = item.ExamID })" class="btn btn-xs btn-warning" name="edit"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></a>
                            <a role="button" href="@Url.Action("Delete", "Exam", new { id = item.ExamID })" class="btn btn-xs btn-danger" name="delete"><i class="fa fa-trash" aria-hidden="true"></i></a>
                        }
                        else
                        {
                            if (item.Status == true && item.SubjectID == intId)
                            {
                                <a role="button" href="@Url.Action("Edit", "Exam", new { id = item.ExamID })" class="btn btn-xs btn-warning" name="edit"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></a>
                            }
                            else
                            {

                            }
                        }
                    </td>
                </tr>
                i++;
            }

        </table>
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions { HttpMethod = "GET", UpdateTargetId = "examList" }))
    </div>
</div>



